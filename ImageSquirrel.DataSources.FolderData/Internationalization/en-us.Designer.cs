//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageSquirrel.DataSources.FolderData.Internationalization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class en_us {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal en_us() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ImageSquirrel.DataSources.FolderData.Internationalization.en-us", typeof(en_us).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of ticks to wait between Change event firings..
        /// </summary>
        internal static string ChangeFilterTicksDescription {
            get {
                return ResourceManager.GetString("ChangeFilterTicksDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Filter Ticks.
        /// </summary>
        internal static string ChangeFilterTicksName {
            get {
                return ResourceManager.GetString("ChangeFilterTicksName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied object is of wrong type. Actual type: &apos;{0}&apos;..
        /// </summary>
        internal static string ConfigurationFactorySuppliedButWrongType {
            get {
                return ResourceManager.GetString("ConfigurationFactorySuppliedButWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The factory, if any, to use when creating IDirectoryInteractor instances..
        /// </summary>
        internal static string ConfigurationInteractorFactoryDescription {
            get {
                return ResourceManager.GetString("ConfigurationInteractorFactoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IDirectoryInteractor Factory.
        /// </summary>
        internal static string ConfigurationInteractorFactoryName {
            get {
                return ResourceManager.GetString("ConfigurationInteractorFactoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The factory, if any, to use when creating IFolderDataWatcher instances..
        /// </summary>
        internal static string ConfigurationWatcherFactoryDescription {
            get {
                return ResourceManager.GetString("ConfigurationWatcherFactoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IFolderDataWatcher Factory.
        /// </summary>
        internal static string ConfigurationWatcherFactoryName {
            get {
                return ResourceManager.GetString("ConfigurationWatcherFactoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines what files are watched within the specified directory..
        /// </summary>
        internal static string FilterDescription {
            get {
                return ResourceManager.GetString("FilterDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Watched Directory File Filter.
        /// </summary>
        internal static string FilterName {
            get {
                return ResourceManager.GetString("FilterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument name &apos;{0}&apos; has conflicting requirements specified..
        /// </summary>
        internal static string FolderDataSourceFactoryConflictingRequirementsSpecified {
            get {
                return ResourceManager.GetString("FolderDataSourceFactoryConflictingRequirementsSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument name &apos;{0}&apos; does not have its dependencies fulfilled..
        /// </summary>
        internal static string FolderDataSourceFactoryDependenciesNotSatisfied {
            get {
                return ResourceManager.GetString("FolderDataSourceFactoryDependenciesNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect number of requirements supplied. Expected {0}, got {1}..
        /// </summary>
        internal static string FolderDataSourceFactoryIncorrectNumberOfRequirements {
            get {
                return ResourceManager.GetString("FolderDataSourceFactoryIncorrectNumberOfRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing required argument. Name: &apos;{0}&apos;..
        /// </summary>
        internal static string FolderDataSourceFactoryMissingRequirement {
            get {
                return ResourceManager.GetString("FolderDataSourceFactoryMissingRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied requirements failed validation..
        /// </summary>
        internal static string FolderDataSourceFactoryRequirementsFailedValidation {
            get {
                return ResourceManager.GetString("FolderDataSourceFactoryRequirementsFailedValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the root directory..
        /// </summary>
        internal static string RootPathDescription {
            get {
                return ResourceManager.GetString("RootPathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root Path.
        /// </summary>
        internal static string RootPathName {
            get {
                return ResourceManager.GetString("RootPathName", resourceCulture);
            }
        }
    }
}
